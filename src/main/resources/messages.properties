productEndpoint.findProductsByName.before=Finding products with name: {0} page index: {1} page size: {2}
productEndpoint.findProductsByName.after=Successfully found products with name: {0} page index: {1} page size: {2}
productEndpoint.findProductsByTimestamp.before=Finding products with timestamp: {0} page index: {1} page size: {2}
productEndpoint.findProductsByTimestamp.after=Successfully found products with timestamp: {0} page index: {1} page size: {2}
productEndpoint.createProduct.before=Creating product: {0}
productEndpoint.createProduct.after=Successfully created product: {0}
productEndpoint.updateProduct.before=Updating product: {0}
productEndpoint.updateProduct.after=Successfully updated product: {0}
productEndpoint.deleteProduct.before=Deleting product: {0}
productEndpoint.deleteProduct.after=Successfully deleted product: {0}
error.productEndpoint.resourceNotFound.message=Product resource with id = {0} does not exist
error.productEndpoint.dBConstraintViolation.message=Resource with name = {0} and timestamp = {1} (both parameters of the unique key) is already present in the DB, so the new entity can't be persisted
error.productEndpoint.inconsistentResourceAndId.message=Input separate id = {0} and resource id ={1} are not equal
error.productEndpoint.notInteger.message=Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; nested exception is java.lang.NumberFormatException: For input string: \"t\"
error.productEndpoint.notLong.message=Failed to convert value of type 'java.lang.String' to required type 'java.lang.Long'; nested exception is java.lang.NumberFormatException: For input string: \"notLongId\"
abstractEndpoint.HttpMessageNotReadableException.handling=HttpMessageNotReadableException handling: {0}
abstractEndpoint.MethodArgumentNotValidException.handling=MethodArgumentNotValidException handling: {0}
abstractEndpoint.DataAccessException.handling=DataAccessException handling: {0}
abstractEndpoint.ResourceNotFoundException.handling=ResourceNotFoundException handling: {0}
abstractEndpoint.InconsistentResourceAndIdException.handling=InconsistentResourceAndIdException handling: {0}
abstractEndpoint.IllegalArgumentException.handling=IllegalArgumentException handling: {0}
abstractEndpoint.MethodArgumentTypeMismatchException.handling=MethodArgumentTypeMismatchException handling: {0}
abstractEndpoint.HttpRequestMethodNotSupportedException.handling=HttpRequestMethodNotSupportedException handling: {0}
abstractEndpoint.DateTimeException.handling=DateTimeException handling: {0}
error.abstractEndpoint.DateTimeException.message=Timestamp an't be null and must be formatted as follows:(yyyy-MM-dd HH:mm:ss)
abstractEndpoint.DefaultException.handling=Default exception handling: {0}
abstractEndpoint.improper.get.requestmapping=Please check the 'GET' mapping: it must be /product/timestamp/{timestamp} or /product/name/{name}
abstractEndpoint.improper.put.requestmapping=Please check the 'PUT' mapping: it must be /product/{id}
error.abstractEndpoint.HttpMessageNotReadableException.message=Could not read document: Can not construct instance of com.example.domain.Product. JSON format is invalid.onstraint validator resolution cannot determine a suitable validator for a given type
error.abstractEndpoint.dateTimeParsingFailed.message=The timestamp parsing failed. The date-time format is the following: 'yyyy-MM-dd HH:mm:ss'
abstractEndpoint.ValidationException.handling=The validation exception occurred(probably connected to the BigDecimal validation)
error.abstractEndpoint.universalError.message=Unexpected error occurred.





